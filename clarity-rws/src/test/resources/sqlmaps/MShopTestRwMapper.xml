<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.midea.trade.rws.mapper.MShopMapper" >
  <resultMap id="BaseResultMap" type="com.midea.trade.rws.mapper.MShop" >
    <id column="shop_id" property="shopId" jdbcType="INTEGER" />
    <result column="platform_id" property="platformId" jdbcType="TINYINT" />
    <result column="shop_name" property="shopName" jdbcType="VARCHAR" />
    <result column="owner" property="owner" jdbcType="VARCHAR" />
    <result column="owner_mobile" property="ownerMobile" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="guarantee_store_id" property="guaranteeStoreId" jdbcType="INTEGER" />
    <result column="logistics_com_code" property="logisticsComCode" jdbcType="VARCHAR" />
    <result column="shop_type" property="shopType" jdbcType="TINYINT" />
    <result column="return_store_id" property="returnStoreId" jdbcType="INTEGER" />
    <result column="outer_shop_id" property="outerShopId" jdbcType="VARCHAR" />
    <result column="shop_cate" property="shopCate" jdbcType="BIGINT" />
    <result column="shop_join_time" property="shopJoinTime" jdbcType="TIMESTAMP" />
    <result column="business_units" property="businessUnits" jdbcType="VARCHAR" />
    <result column="operation_attri" property="operationAttri" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    shop_id, platform_id, shop_name, owner, owner_mobile, email, status, guarantee_store_id, 
    logistics_com_code, shop_type, return_store_id, outer_shop_id, shop_cate, shop_join_time, 
    business_units, operation_attri
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.midea.trade.rws.mapper.MShopExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from     m_shop_test_rw   <!--  @{mod('m_shop_test_rw',shop_id,5)}  -->
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from m_shop_test_rw
    where shop_id = #{shopId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from m_shop_test_rw
    where shop_id = #{shopId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.midea.trade.rws.mapper.MShopExample" >
    delete from m_shop_test_rw
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.midea.trade.rws.mapper.MShop" >
    insert into  m_shop_test_rw (shop_id, platform_id, shop_name, 
      owner, owner_mobile, email, 
      status, guarantee_store_id, logistics_com_code, 
      shop_type, return_store_id, outer_shop_id, 
      shop_cate, shop_join_time, business_units, 
      operation_attri )
    values (#{shopId,jdbcType=INTEGER}, #{platformId,jdbcType=TINYINT}, #{shopName,jdbcType=VARCHAR}, 
      #{owner,jdbcType=VARCHAR}, #{ownerMobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{guaranteeStoreId,jdbcType=INTEGER}, #{logisticsComCode,jdbcType=VARCHAR}, 
      #{shopType,jdbcType=TINYINT}, #{returnStoreId,jdbcType=INTEGER}, #{outerShopId,jdbcType=VARCHAR}, 
      #{shopCate,jdbcType=BIGINT}, #{shopJoinTime,jdbcType=TIMESTAMP}, #{businessUnits,jdbcType=VARCHAR}, 
      #{operationAttri,jdbcType=TINYINT} )
  </insert>
  
  
  <insert id="insertSelective" parameterType="com.midea.trade.rws.mapper.MShop" >
    insert into m_shop_test_rw
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="platformId != null" >
        platform_id,
      </if>
      <if test="shopName != null" >
        shop_name,
      </if>
      <if test="owner != null" >
        owner,
      </if>
      <if test="ownerMobile != null" >
        owner_mobile,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="guaranteeStoreId != null" >
        guarantee_store_id,
      </if>
      <if test="logisticsComCode != null" >
        logistics_com_code,
      </if>
      <if test="shopType != null" >
        shop_type,
      </if>
      <if test="returnStoreId != null" >
        return_store_id,
      </if>
      <if test="outerShopId != null" >
        outer_shop_id,
      </if>
      <if test="shopCate != null" >
        shop_cate,
      </if>
      <if test="shopJoinTime != null" >
        shop_join_time,
      </if>
      <if test="businessUnits != null" >
        business_units,
      </if>
      <if test="operationAttri != null" >
        operation_attri,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="platformId != null" >
        #{platformId,jdbcType=TINYINT},
      </if>
      <if test="shopName != null" >
        #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="owner != null" >
        #{owner,jdbcType=VARCHAR},
      </if>
      <if test="ownerMobile != null" >
        #{ownerMobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="guaranteeStoreId != null" >
        #{guaranteeStoreId,jdbcType=INTEGER},
      </if>
      <if test="logisticsComCode != null" >
        #{logisticsComCode,jdbcType=VARCHAR},
      </if>
      <if test="shopType != null" >
        #{shopType,jdbcType=TINYINT},
      </if>
      <if test="returnStoreId != null" >
        #{returnStoreId,jdbcType=INTEGER},
      </if>
      <if test="outerShopId != null" >
        #{outerShopId,jdbcType=VARCHAR},
      </if>
      <if test="shopCate != null" >
        #{shopCate,jdbcType=BIGINT},
      </if>
      <if test="shopJoinTime != null" >
        #{shopJoinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="businessUnits != null" >
        #{businessUnits,jdbcType=VARCHAR},
      </if>
      <if test="operationAttri != null" >
        #{operationAttri,jdbcType=TINYINT},
      </if>
      <if test="isOpertion != null" >
        #{isOpertion,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.midea.trade.rws.mapper.MShopExample" resultType="java.lang.Integer" >
    select count(*) from m_shop_test_rw
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update m_shop_test_rw
    <set >
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.platformId != null" >
        platform_id = #{record.platformId,jdbcType=TINYINT},
      </if>
      <if test="record.shopName != null" >
        shop_name = #{record.shopName,jdbcType=VARCHAR},
      </if>
      <if test="record.owner != null" >
        owner = #{record.owner,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerMobile != null" >
        owner_mobile = #{record.ownerMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.guaranteeStoreId != null" >
        guarantee_store_id = #{record.guaranteeStoreId,jdbcType=INTEGER},
      </if>
      <if test="record.logisticsComCode != null" >
        logistics_com_code = #{record.logisticsComCode,jdbcType=VARCHAR},
      </if>
      <if test="record.shopType != null" >
        shop_type = #{record.shopType,jdbcType=TINYINT},
      </if>
      <if test="record.returnStoreId != null" >
        return_store_id = #{record.returnStoreId,jdbcType=INTEGER},
      </if>
      <if test="record.outerShopId != null" >
        outer_shop_id = #{record.outerShopId,jdbcType=VARCHAR},
      </if>
      <if test="record.shopCate != null" >
        shop_cate = #{record.shopCate,jdbcType=BIGINT},
      </if>
      <if test="record.shopJoinTime != null" >
        shop_join_time = #{record.shopJoinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.businessUnits != null" >
        business_units = #{record.businessUnits,jdbcType=VARCHAR},
      </if>
      <if test="record.operationAttri != null" >
        operation_attri = #{record.operationAttri,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update m_shop_test_rw
    set shop_id = #{record.shopId,jdbcType=INTEGER},
      platform_id = #{record.platformId,jdbcType=TINYINT},
      shop_name = #{record.shopName,jdbcType=VARCHAR},
      owner = #{record.owner,jdbcType=VARCHAR},
      owner_mobile = #{record.ownerMobile,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      guarantee_store_id = #{record.guaranteeStoreId,jdbcType=INTEGER},
      logistics_com_code = #{record.logisticsComCode,jdbcType=VARCHAR},
      shop_type = #{record.shopType,jdbcType=TINYINT},
      return_store_id = #{record.returnStoreId,jdbcType=INTEGER},
      outer_shop_id = #{record.outerShopId,jdbcType=VARCHAR},
      shop_cate = #{record.shopCate,jdbcType=BIGINT},
      shop_join_time = #{record.shopJoinTime,jdbcType=TIMESTAMP},
      business_units = #{record.businessUnits,jdbcType=VARCHAR},
      operation_attri = #{record.operationAttri,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.midea.trade.rws.mapper.MShop" >
    update m_shop_test_rw
    <set >
      <if test="platformId != null" >
        platform_id = #{platformId,jdbcType=TINYINT},
      </if>
      <if test="shopName != null" >
        shop_name = #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="owner != null" >
        owner = #{owner,jdbcType=VARCHAR},
      </if>
      <if test="ownerMobile != null" >
        owner_mobile = #{ownerMobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="guaranteeStoreId != null" >
        guarantee_store_id = #{guaranteeStoreId,jdbcType=INTEGER},
      </if>
      <if test="logisticsComCode != null" >
        logistics_com_code = #{logisticsComCode,jdbcType=VARCHAR},
      </if>
      <if test="shopType != null" >
        shop_type = #{shopType,jdbcType=TINYINT},
      </if>
      <if test="returnStoreId != null" >
        return_store_id = #{returnStoreId,jdbcType=INTEGER},
      </if>
      <if test="outerShopId != null" >
        outer_shop_id = #{outerShopId,jdbcType=VARCHAR},
      </if>
      <if test="shopCate != null" >
        shop_cate = #{shopCate,jdbcType=BIGINT},
      </if>
      <if test="shopJoinTime != null" >
        shop_join_time = #{shopJoinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="businessUnits != null" >
        business_units = #{businessUnits,jdbcType=VARCHAR},
      </if>
      <if test="operationAttri != null" >
        operation_attri = #{operationAttri,jdbcType=TINYINT},
      </if>
    </set>
    where shop_id = #{shopId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.midea.trade.rws.mapper.MShop" >
    update m_shop_test_rw
    set platform_id = #{platformId,jdbcType=TINYINT},
      shop_name = #{shopName,jdbcType=VARCHAR},
      owner = #{owner,jdbcType=VARCHAR},
      owner_mobile = #{ownerMobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      guarantee_store_id = #{guaranteeStoreId,jdbcType=INTEGER},
      logistics_com_code = #{logisticsComCode,jdbcType=VARCHAR},
      shop_type = #{shopType,jdbcType=TINYINT},
      return_store_id = #{returnStoreId,jdbcType=INTEGER},
      outer_shop_id = #{outerShopId,jdbcType=VARCHAR},
      shop_cate = #{shopCate,jdbcType=BIGINT},
      shop_join_time = #{shopJoinTime,jdbcType=TIMESTAMP},
      business_units = #{businessUnits,jdbcType=VARCHAR},
      operation_attri = #{operationAttri,jdbcType=TINYINT}
    where shop_id = #{shopId,jdbcType=INTEGER}
  </update>
  
  <select id="selectShop" parameterType="map" resultMap="BaseResultMap">
		select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from   @{mod('m_shop_test_rw',shop_id,5)} a inner join  @{mod('m_shop_test_rw',shop_id,5)}  b 
    on  a.shop_id=b.shop_id
  </select>
  
  <select id="selectShopById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
    <include refid="Base_Column_List" />
    from   @{mod('m_shop_test_rw',shop_id,5)}    where shop_id = #{shopId,jdbcType=INTEGER}
  </select>
  
    <select id="selectShopByShard" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
    <include refid="Base_Column_List" />
    from   m_shop_test_rw   
  </select>
</mapper>